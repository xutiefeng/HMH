//************************************************************
//  Copyright (c)  
//	FileName	  : main.c
//	Function	  : Main Function
//  Instructions  : Contains the MCU initialization function and its H file
//************************************************************
/********************Includes************************************************************************/
#include "SC_Init.h"	// MCU initialization header file, including all firmware library header files
#include "SC_it.h"
#include "..\Drivers\SCDriver_list.h"
#include "HeadFiles\SysFunVarDefine.h"
#include "..\Apps\includeall.h"

extern void CMP_Init(void);
unsigned long int exKeyValueFlag;
uint16_t gAD_Value1,gAD_Value2,gAD_Value3,gAD_Value4;
uint8_t gPWMOnOff ;
uint8_t KEY_test;

/**************************************Generated by EasyCodeCube*************************************/
//Forbid editing areas between the labels !!!

/*************************************.Generated by EasyCodeCube.************************************/


/*****************************************************************************************************
* Function Name: main
* Description  : This function implements main function.
* Arguments    : None
* Return Value : None
******************************************************************************************************/
void main(void)
{	
#if(LDROM_MODE==0)
    SetInterruptAPP();
#endif
    /*<Generated by EasyCodeCube begin>*/
/*<UserCodeStart>*//*<SinOne-Tag><36>*/
    IcResourceInit();
    /*<UserCodeEnd>*//*<SinOne-Tag><36>*/
/*<UserCodeStart>*//*<SinOne-Tag><60>*/
    OTA_Init(IOT_Uart_Receiver,&IOT_Uart_DataBuf);
    IOT_Init(0);
    TouchKeyInit();
    sysRest();
		EEpromInit();
		while(gstRDsysTick.tickCnt < 200)
		{
				;
		}
    CMP_Init();
    
    /*<UserCodeEnd>*//*<SinOne-Tag><60>*/
/*<UserCodeStart>*//*<SinOne-Tag><4>*/
    /*****MainLoop*****/
    //WriteTempEeprom();
    while(1)
    {
        /*<UserCodeStart>*//*<SinOne-Tag><14>*/
        /***User program***/
        WDTCON |=0x10;
        
        if(IOT_GET_FW==IOT_Work())                        //IOT平台交互命令处理
        {
#if(FIRMWARE_DOWMLOADER_MODE==0) //在BOOT中下载固件
            OTA_JumpBoot();             //复位到BOOT，在BOOT中下载固件并更新到APP区
#endif
        }
        
#if(FIRMWARE_DOWMLOADER_MODE==1)
        OTA_FirmwareDownload(&IAP_Pack);   //从IOT平台下载固件
        
        if(IAP_Pack.Size!=0)                       //完成一包数据接收
        {
            unsigned int IapLen;
            BootLoadInit();                         //开放IAP操作区域
            IapLen=SaveOTA_to_BacksArea(&IAP_Pack); //将APP写入备份区
            if(IapLen!=0)                           //写入成功
            {
                IAP_Pack.State=OTA_IAPWRITED;
            }
            else
            {
                IAP_Pack.State=OTA_FAULT;             //下载失败
            }
            IAP_Pack.Size=0;
            BootLoad_DeInit();                        //恢复IAP操作区域
        }			
        if(IAP_Pack.State==OTA_COMPLETE)     //下载完成是，IAP_Pack.State置为OTA_COMPLETE状态
        {
            BootLoadInit();                   //开放IAP操作区域
            if (!IAP_BacksArea_CrcCheck())    //检查下载到备份区代码的Crc       
            {
                BootLoad_DeInit();            //恢复IAP操作区域
                IAP_Pack.State=OTA_FAULT;     //下载失败
            }
            else                              //校验通过
            {
                BootLoad_DeInit();            //恢复IAP操作区域
                OTA_JumpBoot();             //复位到BOOT，将备份区更新到APP区
            }
        }	
        
        if(IAP_Pack.State==OTA_FAULT)  //出错处理
        {
            OTA_Init(IOT_Uart_Receiver,&IOT_Uart_DataBuf);
            IOT_Init(0);
        }		
#endif
#if 1         
        if(SOCAPI_TouchKeyStatus & 0x80)
        {
            SOCAPI_TouchKeyStatus &= 0x7f;
            exKeyValueFlag = TouchKeyScan();
            if(exKeyValueFlag >0)
            { 
                NoKeyPressFalg = 0;
                if(exKeyValueFlag&0x02ul)
                {
                    KeyRestFlag = 1;
                }
                exKeyValueFlag>>=8;
                if(exKeyValueFlag&0x40ul)
                {
                    KeySelecetFlag  = 1;
                }
                
                
                
            }
            else
            {
                NoKeyPressFalg = 1;
            }
            
            TouchKeyRestart();
        }
#endif
#if 0
        ADC_ChannelConfig(ADC_CHANNEL_1,ENABLE);
        
        gAD_Value4 = ADC_GetConversionAverageValue(10);
        
        ADC_ChannelConfig(ADC_CHANNEL_3,ENABLE);
        gAD_Value1 = ADC_GetConversionAverageValue(10);
        
        ADC_ChannelConfig(ADC_CHANNEL_5,ENABLE);
        gAD_Value2 = ADC_GetConversionAverageValue(10);
        
        ADC_ChannelConfig(ADC_CHANNEL_7,ENABLE);
        gAD_Value3 = ADC_GetConversionAverageValue(10);
        
#endif
#if 0
        if( KEY_test)//gPWMOnOff
        {
            LED1_R = 1;
            LED2_R = 1;
            LED3_R = 1;
            LED4_R = 1;
            LED1_L = 0;
            LED2_L = 0;
            LED3_L = 0;
            LED4_L = 0;
            
        }
        else
        {
            
            LED1_R = 0;
            LED2_R = 0;
            LED3_R = 0;
            LED4_R = 0;
            LED1_L = 1;
            LED2_L = 1;
            LED3_L = 1;
            LED4_L = 1;
        }
#endif 
        
#if 0
        if(P05 == 0)
        {
            BuzzerFlag =  1;
            //PWM_IndependentModeConfig(PWM02,2000);
        }
        else
        {
            //PWM_IndependentModeConfig(PWM02,0);
        }
        
#endif
#if 1
        sysRuning();
#endif
        
        if((CMPCON&0x20)|| KEY_test==0x5A )    //判断模拟器输出状态
        {
            KEY_test &= ~0X5A;
            WriteTempEeprom();
            BuzzerFlag =  1;
        } 
#if 0
        else
        {
            if(readEEprom(EEPROM_ADDR) == 0)
            {
                LED1_L =1;
                LED2_L =0;
                LED3_L =0;
                LED4_L =0;
            }
            else if(readEEprom(EEPROM_ADDR) == 1)
            {
                LED1_L =0;
                LED2_L =1;
                LED3_L =0;
                LED4_L =0;
            }
            else if(readEEprom(EEPROM_ADDR) == 2)
            {
                LED1_L =0;
                LED2_L =0;
                LED3_L =1;
                LED4_L =0;
            }
            else
            {
                LED1_L =0;
                LED2_L =0;
                LED3_L =0;
                LED4_L =1;
                
            }
            
        }
#endif
        /*<UserCodeEnd>*//*<SinOne-Tag><14>*/
/*<Begin-Inserted by EasyCodeCube for Condition>*/
    }
    /*<UserCodeEnd>*//*<SinOne-Tag><4>*/
/*<Generated by EasyCodeCube end>*/
}


