C51 COMPILER V9.59.0.0   KEY                                                               04/08/2024 14:09:42 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN ..\Output\key.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Apps\key.c LARGE OMF2 OPTIMIZE(0,SIZE) BROWSE INTVECTOR(0X1000) INCDI
                    -R(..\FWLib\SC95F_Lib\inc;..\User;..\IOT_DRIVER\XIAOMI;..\Drivers;..\Drivers\TKDriver\C;..\List\..\Apps;..\Apps) DEFINE(S
                    -C95F8x1xB) DEBUG PRINT(..\List\key.lst) TABS(2) OBJECT(..\Output\key.obj)

line level    source

   1          #include <SC95F8x1xB_C.H>
   2          #include  "key.h"
   3          
   4          #include "includeall.h"
   5          
   6          
   7          
   8          extern unsigned char  xdata   SOCAPI_TouchKeyStatus;          //API接口状态：bit7-一轮扫描完成标志  1:完成  0：未
             -完成
   9          extern void RestFilter(void);
  10          static u8 sKeyValue = 0;
  11          
  12          static u8 sKeyReskCnt=0;
  13          
  14          
  15          /*********************************************************************************************************
             -********************************* 
  16          * 函数名称: RestKeyProcess
  17          * 功能说明: 复位键按下，取消设置滤芯
  18          * 输    入: 无  
  19          * 输    出: 无
  20          * 注意事项:
  21          **********************************************************************************************************
             -********************************/
  22          void RestKeyProcess(void)
  23          {
  24   1          //LongPress_3sFlag = 0;
  25   1      }
  26          
  27          
  28          
  29          
  30          
  31          /*********************************************************************************************************
             -********************************* 
  32          * 函数名称: KeySelect
  33          * 功能说明: 选择按键
  34          * 输    入: 无  
  35          * 输    出: 无
  36          * 注意事项: 短按有效
  37          **********************************************************************************************************
             -********************************/
  38          extern void setLED(u8 num,emColor color ,U_LED state,u8 time);
  39          
  40          /*********************************************************************************************************
             -********************************* 
  41          * 函数名称: KeyCancelRestKey
  42          * 功能说明: 
  43          * 输    入: 无  
  44          * 输    出: 无
  45          * 注意事项: 短按有效
  46          **********************************************************************************************************
             -********************************/
C51 COMPILER V9.59.0.0   KEY                                                               04/08/2024 14:09:42 PAGE 2   

  47          void KeyCancelRestKey(void)
  48          {
  49   1        
  50   1          static u8  sCancelRestKeyCnt=0;
  51   1          static u16 sRestFilteryCnt=0;
  52   1        
  53   1          if(!RestFilterFlag)
  54   1          {
  55   2              sRestFilteryCnt = 0;
  56   2              return;
  57   2          }
  58   1          
  59   1          sRestFilteryCnt++;
  60   1          
  61   1          if((KeyCancelRestFlag )&& (sRestFilteryCnt < _5Min_Per50MS))
  62   1          {
  63   2            sCancelRestKeyCnt++;
  64   2            if(sCancelRestKeyCnt > _5S_Per50MS)
  65   2            {
  66   3                KeyCancelRestFlag = 0;
  67   3                ReadEEprom(0);
  68   3            }   
  69   2          }
  70   1          
  71   1      }
  72          
  73          /*********************************************************************************************************
             -********************************* 
  74          * 函数名称: KeySelect
  75          * 功能说明: 选择按键
  76          * 输    入: 无  
  77          * 输    出: 无
  78          * 注意事项: 短按有效
  79          **********************************************************************************************************
             -********************************/
  80          void KeySelect(void)
  81          {
  82   1        
  83   1          static u8 sKeySelectCnt=0;
  84   1        
  85   1          if(KeyCancelRestFlag)
  86   1          {
  87   2              KeySelecetFlag = 0;
  88   2              sKeySelectCnt = 0;
  89   2              return;
  90   2          }
  91   1          
  92   1          if(   KeySelecetFlag )//按下按键
  93   1          {
  94   2            KeySelecetFlag = 0;
  95   2            KeyRestFlag = 0;
  96   2            sKeySelectCnt++;
  97   2          }
  98   1      
  99   1          else if(NoKeyPressFalg)//松开按键
 100   1          {
 101   2            if(sKeySelectCnt >0 && sKeySelectCnt < 10 )
 102   2            {
 103   3      
 104   3              ///////////////////////////按键逻辑处理//////////////////////////////
 105   3                if(LongPress_5sFlag)
 106   3                { 
C51 COMPILER V9.59.0.0   KEY                                                               04/08/2024 14:09:42 PAGE 3   

 107   4                    LongPress_5sFlag = 0;
 108   4                    RestFilter();   
 109   4                    RestFilterFlag = 1;
 110   4                }
 111   3                  
 112   3                else if(LongPress_3sFlag)
 113   3                {
 114   4                  if(gstFilte.type == ROFilter)
 115   4                  {
 116   5                    gstFilte.type = MixFilter;
 117   5                    setLED(1,BlueColor,lightOn,0);
 118   5                  }
 119   4                  else
 120   4                  {
 121   5                    gstFilte.type = ROFilter;
 122   5                    setLED(2,BlueColor,lightOn,0);
 123   5                  }
 124   4                  Buzzer2Flag = 1;
 125   4                  
 126   4                }     
 127   3                sKeySelectCnt = 0;
 128   3                KeySelecetFlag = 0;
 129   3              }
 130   2            else
 131   2            {
 132   3                sKeySelectCnt = 0;
 133   3            }
 134   2              
 135   2      
 136   2            }
 137   1            
 138   1      }
 139          
 140          
 141          /*********************************************************************************************************
             -********************************* 
 142          * 函数名称: KeyRest
 143          * 功能说明: 长按复位键3秒，蜂鸣器短鸣一声：0.2秒
 144                      长按复位键5秒，蜂鸣器长鸣一声：2秒
 145          * 输    入: 无  
 146          * 输    出: 无
 147          * 注意事项:
 148          **********************************************************************************************************
             -********************************/
 149          void KeyRest(void)
 150          { 
 151   1          static u8 sUseFactoryCnt =0;
 152   1          static u8 sKeyReskCnt =0;//按下计时
 153   1          static u8 sKeyPressCnt =0;//按下次数
 154   1        
 155   1          if(KeyCancelRestFlag)
 156   1          {
 157   2              KeySelecetFlag = 0;
 158   2              sKeyReskCnt = 0;
 159   2              return;
 160   2          }
 161   1      
 162   1          if(sUseFactoryCnt < 0xff)
 163   1            sUseFactoryCnt++;
 164   1          
 165   1          if(NoKeyPressFalg)
 166   1          {
C51 COMPILER V9.59.0.0   KEY                                                               04/08/2024 14:09:42 PAGE 4   

 167   2      ///////////////////////////////退出工程模式////////////////////////////////////////   
 168   2            if(sKeyReskCnt >0 && sKeyReskCnt < 20 )
 169   2            {
 170   3      
 171   3            
 172   3              if(sUseFactoryCnt < _10S_Per50MS && !FactoryModeFlag) //上电10秒内    
 173   3              {
 174   4                
 175   4                sKeyPressCnt++;
 176   4                
 177   4                Buzzer3Flag = 1;
 178   4                
 179   4                if(sKeyPressCnt >4 )//复位键按五次进入工程模式
 180   4                {
 181   5                  FactoryModeFlag = 1;          
 182   5                  sKeyReskCnt = 0;
 183   5                  KeyRestFlag = 0;
 184   5                }   
 185   4              }
 186   3      
 187   3              sKeyReskCnt = 0;
 188   3              KeyRestFlag = 0;
 189   3              RestKeyProcess();//短按处理
 190   3            }
 191   2            else
 192   2            {
 193   3                sKeyReskCnt = 0;
 194   3            }
 195   2          } 
 196   1          
 197   1          if(KeyRestFlag)
 198   1          {
 199   2            KeyRestFlag = 0;
 200   2            
 201   2            sKeyReskCnt++;
 202   2          }
 203   1            
 204   1            
 205   1          else if(sKeyReskCnt > _10S_Per50MS || !KeyRestFlag)
 206   1          {
 207   2              return;
 208   2          }
 209   1              
 210   1          
 211   1          if(sKeyReskCnt == _3S_Per50MS)
 212   1          {
 213   2                Buzzer2Flag = 1;
 214   2                LongPress_5sFlag = 0;
 215   2                LongPress_3sFlag = 1;
 216   2          }
 217   1          else if(sKeyReskCnt == _5S_Per50MS)
 218   1          {
 219   2                Buzzer5Flag = 1;
 220   2                LongPress_5sFlag = 1;
 221   2                LongPress_3sFlag = 0;
 222   2          }
 223   1            
 224   1      }
 225          
 226          /*********************************************************************************************************
             -********************************* 
 227          * 函数名称: KeyGaoYaSwitch
C51 COMPILER V9.59.0.0   KEY                                                               04/08/2024 14:09:42 PAGE 5   

 228          * 功能说明: 检测高压开关闭合还是断开
 229          * 输    入: 无  
 230          * 输    出: 无
 231          * 注意事项: 短按有效
 232          **********************************************************************************************************
             -********************************/
 233          
 234          void KeyGaoYaSwitch(void)
 235          {
 236   1          if(InputKey_io == 0 && !KeySwitchFlag1)
 237   1          {
 238   2              KeySwitchFlag1 = 1;
 239   2          }
 240   1          else if(InputKey_io == 0 && KeySwitchFlag1)
 241   1          {
 242   2          
 243   2            DLy_8616B();
 244   2              
 245   2            if(InputKey_io == 0)
 246   2            {
 247   3              KeySwitchFlag  = 1;
 248   3            }
 249   2              
 250   2            else
 251   2            {
 252   3              KeySwitchFlag1 = 0;
 253   3            }
 254   2               
 255   2          }
 256   1          else
 257   1          {
 258   2              KeySwitchFlag = 0;
 259   2              KeySwitchFlag1= 0;
 260   2          }
 261   1          
 262   1      }
 263          
 264          /*********************************************************************************************************
             -********************************* 
 265          * 函数名称: KeyProcess
 266          * 功能说明: 处理按键长按短按功能
 267          * 输    入: 无  
 268          * 输    出: 无
 269          * 注意事项: 触发时间50ms
 270          **********************************************************************************************************
             -********************************/
 271          void NoKeyProcess(void)
 272          { 
 273   1          static u8 sNoKeytCnt=0; 
 274   1        
 275   1          if(NoKeyPressFalg)
 276   1          {
 277   2            sNoKeytCnt++;
 278   2            
 279   2          }
 280   1          else
 281   1          {
 282   2            sNoKeytCnt = 0;
 283   2          }
 284   1        
 285   1          if(sNoKeytCnt > _10S_Per50MS)
 286   1          {
C51 COMPILER V9.59.0.0   KEY                                                               04/08/2024 14:09:42 PAGE 6   

 287   2              LongPress_3sFlag = 0;
 288   2              LongPress_5sFlag = 0;   
 289   2              
 290   2          } 
 291   1        
 292   1      }
 293          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    958    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
