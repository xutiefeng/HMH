C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SC95F_GPIO
OBJECT MODULE PLACED IN ..\Output\sc95f_gpio.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_gpio.c LARGE OMF2 OPTIMIZE(8,SIZE) BROWSE I
                    -NTVECTOR(0X2800) INCDIR(..\FWLib\SC95F_Lib\inc;..\User;..\IOT_DRIVER\XIAOMI;..\Drivers;..\Drivers\TKDriver\C;..\List\..\
                    -Apps;..\Apps) DEFINE(SC95F8x1xB) DEBUG PRINT(..\List\sc95f_gpio.lst) TABS(2) OBJECT(..\Output\sc95f_gpio.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子股份有限公司
   3          //  文件名称:     sc95f_gpio.c
   4          //  作者:         赛元应用团队
   5          //  模块功能:     GPIO固件库函数C文件
   6          //  最后更正日期: 2024年1月18日
   7          //  版本:       V1.0002
   8          //  说明:       该文件仅适用于SC95F系列芯片
   9          //*************************************************************
  10          
  11          #include "sc95f_gpio.h"
  12          
  13          /**************************************************
  14          *函数名称:void GPIO_DeInit(void)
  15          *函数功能:GPIO相关寄存器复位至缺省值
  16          *入口参数:void
  17          *出口参数:void
  18          **************************************************/
  19          void GPIO_DeInit(void)
  20          {
  21   1      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x)\
  22   1          || defined (SC95F8x6x) || defined (SC95F7x6x) || defined (SC95F8x1xB) || defined (SC95F7x1xB) || defined
             - (SC95R751)\
  23   1          || defined (SC95F7610B) || defined (SC95R602) || defined (SC95R605)
  24   1        P0CON = 0x00;
  25   1        P1CON = 0x00;
  26   1        P2CON = 0x00;
  27   1        P3CON = 0x00;
  28   1        P4CON = 0x00;
  29   1        P5CON = 0x00;
  30   1        P0PH = 0x00;
  31   1        P1PH = 0x00;
  32   1        P2PH = 0x00;
  33   1        P3PH = 0x00;
  34   1        P4PH = 0x00;
  35   1        P5PH = 0x00;
  36   1        P0 = P1 = P2 = P3 = P4 = P5 = 0;
  37   1      #endif
  38   1      
  39   1      #if defined(SC95F7619B)
                P0CON = 0x00;
                P1CON = 0x00;
                P2CON = 0x00;
                P4CON = 0x00;
                P5CON = 0x00;
                P0PH = 0x00;
                P1PH = 0x00;
                P2PH = 0x00;
                P4PH = 0x00;
                P5PH = 0x00;
                P0 = P1 = P2 = P4 = P5 = 0;
              #endif
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 2   

  52   1      
  53   1      #if defined(SC95F8x2x) || defined(SC95F7x2x) || defined(SC95FS52x) || defined(SC95F8x7x) || defined(SC95F7
             -x7x)|| defined(SC95R503)
                P0CON = 0x00;
                P1CON = 0x00;
                P2CON = 0x00;
                P5CON = 0x00;
                P0PH = 0x00;
                P1PH = 0x00;
                P2PH = 0x00;
                P5PH = 0x00;
                P0 = P1 = P2 = P5 = 0;
              #endif
  64   1      }
  65          
  66          /**************************************************
  67          *函数名称:void GPIO_Init(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  68          *函数功能:GPIO口配置初始化
  69          *入口参数:
  70          GPIO_TypeDef:GPIOx:待操作的GPIO口
  71          GPIO_Pin_TypeDef:PortPins:GPIO管脚Pxy（uint8_t作为入参，方便进行位或操作）
  72          GPIO_Mode_TypeDef:GPIO_Mode:GPIO口模式（高阻输入、上拉输入、推挽输出）
  73          *出口参数:void
  74          **************************************************/
  75          void GPIO_Init(GPIO_TypeDef GPIOx, uint8_t PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  76          {
  77   1        /* 选择需要操作的GPIO */
  78   1        switch(GPIOx)
  79   1        {
  80   2          case GPIO0:
  81   2          {
  82   3            switch(GPIO_Mode)
  83   3            {
  84   4              /* 配置IO为高阻输入模式 */
  85   4              case GPIO_MODE_IN_HI:
  86   4                P0CON &= ~PortPins;
  87   4                P0PH &= ~PortPins;
  88   4                break;
  89   4              /* 配置IO为上拉输入模式 */
  90   4              case GPIO_MODE_IN_PU:
  91   4                P0CON &= ~PortPins;
  92   4                P0PH |= PortPins;
  93   4                break;
  94   4              /* 配置IO为推挽输出模式 */
  95   4              case GPIO_MODE_OUT_PP:
  96   4                P0CON |= PortPins;
  97   4                break;
  98   4              default:
  99   4                break;
 100   4            }
 101   3          }
 102   2          break;
 103   2          case GPIO1:
 104   2          {
 105   3            switch(GPIO_Mode)
 106   3            {
 107   4              /* 配置IO为高阻输入模式 */
 108   4              case GPIO_MODE_IN_HI:
 109   4                P1CON &= ~PortPins;
 110   4                P1PH &= ~PortPins;
 111   4                break;
 112   4              /* 配置IO为上拉输入模式 */
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 3   

 113   4              case GPIO_MODE_IN_PU:
 114   4                P1CON &= ~PortPins;
 115   4                P1PH |= PortPins;
 116   4                break;
 117   4              /* 配置IO为推挽输出模式 */
 118   4              case GPIO_MODE_OUT_PP:
 119   4                P1CON |= PortPins;
 120   4                break;
 121   4              default:
 122   4                break;
 123   4            }
 124   3          }
 125   2          break;
 126   2          case GPIO2:
 127   2          {
 128   3            switch(GPIO_Mode)
 129   3            {
 130   4              /* 配置IO为高阻输入模式 */
 131   4              case GPIO_MODE_IN_HI:
 132   4                P2CON &= ~PortPins;
 133   4                P2PH &= ~PortPins;
 134   4                break;
 135   4              /* 配置IO为上拉输入模式 */
 136   4              case GPIO_MODE_IN_PU:
 137   4                P2CON &= ~PortPins;
 138   4                P2PH |= PortPins;
 139   4                break;
 140   4              /* 配置IO为推挽输出模式 */
 141   4              case GPIO_MODE_OUT_PP:
 142   4                P2CON |= PortPins;
 143   4                break;
 144   4              default:
 145   4                break;
 146   4            }
 147   3          }
 148   2          break;
 149   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x)&& !defined (SC95R503)
 150   2      #if !defined(SC95F7619B)
 151   2          case GPIO3:
 152   2          {
 153   3            switch(GPIO_Mode)
 154   3            {
 155   4              /* 配置IO为高阻输入模式 */
 156   4              case GPIO_MODE_IN_HI:
 157   4                P3CON &= ~PortPins;
 158   4                P3PH &= ~PortPins;
 159   4                break;
 160   4              /* 配置IO为上拉输入模式 */
 161   4              case GPIO_MODE_IN_PU:
 162   4                P3CON &= ~PortPins;
 163   4                P3PH |= PortPins;
 164   4                break;
 165   4              /* 配置IO为推挽输出模式 */
 166   4              case GPIO_MODE_OUT_PP:
 167   4                P3CON |= PortPins;
 168   4                break;
 169   4              default:
 170   4                break;
 171   4            }
 172   3          }
 173   2          break;
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 4   

 174   2      #endif
 175   2          case GPIO4:
 176   2          {
 177   3            switch(GPIO_Mode)
 178   3            {
 179   4              /* 配置IO为高阻输入模式 */
 180   4              case GPIO_MODE_IN_HI:
 181   4                P4CON &= ~PortPins;
 182   4                P4PH &= ~PortPins;
 183   4                break;
 184   4              /* 配置IO为上拉输入模式 */
 185   4              case GPIO_MODE_IN_PU:
 186   4                P4CON &= ~PortPins;
 187   4                P4PH |= PortPins;
 188   4                break;
 189   4              /* 配置IO为推挽输出模式 */
 190   4              case GPIO_MODE_OUT_PP:
 191   4                P4CON |= PortPins;
 192   4                break;
 193   4              default:
 194   4                break;
 195   4            }
 196   3          }
 197   2          break;
 198   2      #endif
 199   2          case GPIO5:
 200   2          {
 201   3            switch(GPIO_Mode)
 202   3            {
 203   4              /* 配置IO为高阻输入模式 */
 204   4              case GPIO_MODE_IN_HI:
 205   4                P5CON &= ~PortPins;
 206   4                P5PH &= ~PortPins;
 207   4                break;
 208   4              /* 配置IO为上拉输入模式 */
 209   4              case GPIO_MODE_IN_PU:
 210   4                P5CON &= ~PortPins;
 211   4                P5PH |= PortPins;
 212   4                break;
 213   4              /* 配置IO为推挽输出模式 */
 214   4              case GPIO_MODE_OUT_PP:
 215   4                P5CON |= PortPins;
 216   4                break;
 217   4              default:
 218   4                break;
 219   4            }
 220   3          }
 221   2          break;
 222   2          default:
 223   2            break;
 224   2        }
 225   1      }
 226          
 227          /**************************************************
 228          *函数名称:void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
 229          *函数功能:GPIO口赋值
 230          *入口参数:
 231          GPIO_TypeDef:GPIOx:待操作的GPIO口
 232          uint8_t:PortVal:GPIO口的值
 233          *出口参数:void
 234          **************************************************/
 235          void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 5   

 236          {
 237   1        /* 选择需要操作的GPIO */
 238   1        switch(GPIOx)
 239   1        {
 240   2          case GPIO0:
 241   2            P0 = PortVal;
 242   2            break;
 243   2          case GPIO1:
 244   2            P1 = PortVal;
 245   2            break;
 246   2          case GPIO2:
 247   2            P2 = PortVal;
 248   2            break;
 249   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x)&& !defined (SC95R503)
 250   2      #if !defined(SC95F7619B)
 251   2          case GPIO3:
 252   2            P3 = PortVal;
 253   2            break;
 254   2      #endif
 255   2          case GPIO4:
 256   2            P4 = PortVal;
 257   2            break;
 258   2      #endif
 259   2          case GPIO5:
 260   2            P5 = PortVal;
 261   2            break;
 262   2          default:
 263   2            break;
 264   2        }
 265   1      }
 266          
 267          /**************************************************
 268          *函数名称:void GPIO_WriteHigh(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 269          *函数功能:GPIO口管脚Pxy置位
 270          *入口参数:
 271          GPIO_TypeDef:GPIOx:待操作的GPIO口
 272          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy（uint8_t作为入参，方便进行位或操作）
 273          *出口参数:void
 274          **************************************************/
 275          void GPIO_WriteHigh(GPIO_TypeDef GPIOx, uint8_t PortPins)
 276          {
 277   1        /* 选择需要操作的GPIO */
 278   1        switch(GPIOx)
 279   1        {
 280   2          case GPIO0:
 281   2            P0 |= PortPins;
 282   2            break;
 283   2          case GPIO1:
 284   2            P1 |= PortPins;
 285   2            break;
 286   2          case GPIO2:
 287   2            P2 |= PortPins;
 288   2            break;
 289   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x)&& !defined (SC95R503)
 290   2      #if !defined(SC95F7619B)
 291   2          case GPIO3:
 292   2            P3 |= PortPins;
 293   2            break;
 294   2      #endif
 295   2          case GPIO4:
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 6   

 296   2            P4 |= PortPins;
 297   2            break;
 298   2      #endif
 299   2          case GPIO5:
 300   2            P5 |= PortPins;
 301   2            break;
 302   2          default:
 303   2            break;
 304   2        }
 305   1      }
 306          
 307          /**************************************************
 308          *函数名称:void GPIO_WriteLow(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 309          *函数功能:GPIO口管脚Pxy复位
 310          *入口参数:
 311          GPIO_TypeDef:GPIOx:待操作的GPIO口
 312          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy（uint8_t作为入参，方便进行位或操作）
 313          *出口参数:void
 314          **************************************************/
 315          void GPIO_WriteLow(GPIO_TypeDef GPIOx, uint8_t PortPins)
 316          {
 317   1        /* 选择需要操作的GPIO */
 318   1        switch(GPIOx)
 319   1        {
 320   2          case GPIO0:
 321   2            P0 &= ~PortPins;
 322   2            break;
 323   2          case GPIO1:
 324   2            P1 &= ~PortPins;
 325   2            break;
 326   2          case GPIO2:
 327   2            P2 &= ~PortPins;
 328   2            break;
 329   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x) && !defined (SC95R503)
 330   2      #if !defined(SC95F7619B)
 331   2          case GPIO3:
 332   2            P3 &= ~PortPins;
 333   2            break;
 334   2      #endif
 335   2          case GPIO4:
 336   2            P4 &= ~PortPins;
 337   2            break;
 338   2      #endif
 339   2          case GPIO5:
 340   2            P5 &= ~PortPins;
 341   2            break;
 342   2          default:
 343   2            break;
 344   2        }
 345   1      }
 346          
 347          /**************************************************
 348          *函数名称:uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 349          *函数功能:读GPIO口Px的值
 350          *入口参数:
 351          GPIO_TypeDef:GPIOx:待操作的GPIO口
 352          *出口参数:
 353          uint8_t:返回Px的值
 354          **************************************************/
 355          uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 356          {
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 7   

 357   1        /* 选择需要操作的GPIO */
 358   1        switch(GPIOx)
 359   1        {
 360   2          case GPIO0:
 361   2            return P0;
 362   2          case GPIO1:
 363   2            return P1;
 364   2          case GPIO2:
 365   2            return P2;
 366   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x) && !defined (SC95R503)
 367   2      #if !defined(SC95F7619B)
 368   2          case GPIO3:
 369   2            return P3;
 370   2      #endif
 371   2          case GPIO4:
 372   2            return P4;
 373   2      #endif
 374   2          case GPIO5:
 375   2            return P5;
 376   2          default:
 377   2            return 0;
 378   2        }
 379   1      }
 380          
 381          /**************************************************
 382          *函数名称:BitStatus GPIO_ReadPin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 383          *函数功能:读GPIO口管脚Pxy的值
 384          *入口参数:
 385          GPIO_TypeDef:GPIOx:待操作的GPIO口
 386          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy
 387          *出口参数:
 388          BitStatus:返回Pxy的值
 389          **************************************************/
 390          BitStatus GPIO_ReadPin(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 391          {
 392   1        BitStatus TempBitstatus;
 393   1        /* 选择需要操作的GPIO */
 394   1        switch(GPIOx)
 395   1        {
 396   2          case GPIO0:
 397   2            TempBitstatus = (P0 & PortPins);
 398   2            break;
 399   2          case GPIO1:
 400   2            TempBitstatus = (P1 & PortPins);
 401   2            break;
 402   2          case GPIO2:
 403   2            TempBitstatus = (P2 & PortPins);
 404   2            break;
 405   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x) && !defined (SC95R503)
 406   2      #if !defined(SC95F7619B)
 407   2          case GPIO3:
 408   2            TempBitstatus = (P3 & PortPins);
 409   2            break;
 410   2      #endif
 411   2          case GPIO4:
 412   2            TempBitstatus = (P4 & PortPins);
 413   2            break;
 414   2      #endif
 415   2          case GPIO5:
 416   2            TempBitstatus = (P5 & PortPins);
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 8   

 417   2            break;
 418   2          default:
 419   2            TempBitstatus = 0;
 420   2            break;
 421   2        }
 422   1      
 423   1        if(TempBitstatus > 0)
 424   1          return SET;
 425   1        else
 426   1          return RESET;
 427   1      }
 428          
 429          /**************************************************
 430          *函数名称:BitStatus GPIO_TogglePin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 431          *函数功能:翻转GPIO口管脚Pxy的值
 432          *入口参数:
 433          GPIO_TypeDef:GPIOx:待操作的GPIO口
 434          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy（uint8_t作为入参，方便进行位或操作）
 435          *出口参数:
 436          **************************************************/
 437          void GPIO_TogglePin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 438          {
 439   1        /* 选择需要操作的GPIO */
 440   1        switch(GPIOx)
 441   1        {
 442   2          case GPIO0:
 443   2            P0 = (P0) ^ PortPins;
 444   2            break;
 445   2          case GPIO1:
 446   2            P1 = (P1) ^ PortPins;
 447   2            break;
 448   2          case GPIO2:
 449   2            P2 = (P2) ^ PortPins;
 450   2            break;
 451   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x) && !defined (SC95R503)
 452   2      #if !defined(SC95F7619B)
 453   2          case GPIO3:
 454   2            P3 = (P3) ^ PortPins;
 455   2            break;
 456   2      #endif
 457   2          case GPIO4:
 458   2            P4 = (P4) ^ PortPins;
 459   2            break;
 460   2      #endif
 461   2          case GPIO5:
 462   2            P5 = (P5) ^ PortPins;
 463   2            break;
 464   2          default:
 465   2            break;
 466   2        }
 467   1      }
 468          
 469          /**************************************************
 470          *函数名称:void GPIO_IOH_Config(GPIO_TypeDef GPIOx, uint8_t PortPins,GPIO_IOH_Grade_TypeDef GPIO_IOH_Grade)
 471          *函数功能:设置GPIO口管脚IOH输出能力
 472          *入口参数:
 473          GPIO_TypeDef:GPIOx:待操作的GPIO口
 474          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy
 475          GPIO_IOH_Grade_TypeDef:GPIO_IOH_Grade:选择IOH的输出等级
 476          *出口参数:void
 477          **************************************************/
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 9   

 478          void GPIO_IOH_Config(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins, GPIO_IOH_Grade_TypeDef GPIO_IOH_Grade)
 479          {
 480   1        /* 选择需要操作的GPIO */
 481   1        switch(GPIOx)
 482   1        {
 483   2          case GPIO0:
 484   2            if(PortPins == GPIO_PIN_LNIB)
 485   2            {
 486   3              IOHCON0 &= 0xFC;
 487   3              IOHCON0 |= GPIO_IOH_Grade;
 488   3            }
 489   2            else if(PortPins == GPIO_PIN_HNIB)
 490   2            {
 491   3              IOHCON0 &= 0xF3;
 492   3              IOHCON0 |= GPIO_IOH_Grade << 2;
 493   3            }
 494   2            break;
 495   2          case GPIO1:
 496   2            if(PortPins == GPIO_PIN_LNIB)
 497   2            {
 498   3              IOHCON0 &= 0xCF;
 499   3              IOHCON0 |= GPIO_IOH_Grade << 4;
 500   3            }
 501   2            else if(PortPins == GPIO_PIN_HNIB)
 502   2            {
 503   3              IOHCON0 &= 0x3F;
 504   3              IOHCON0 |= GPIO_IOH_Grade << 6;
 505   3            }
 506   2            break;
 507   2          case GPIO2:
 508   2            if(PortPins == GPIO_PIN_LNIB)
 509   2            {
 510   3              IOHCON1 &= 0xFC;
 511   3              IOHCON1 |= GPIO_IOH_Grade;
 512   3            }
 513   2            else if(PortPins == GPIO_PIN_HNIB)
 514   2            {
 515   3              IOHCON1 &= 0xF3;
 516   3              IOHCON1 |= GPIO_IOH_Grade << 2;
 517   3            }
 518   2            break;
 519   2      #if !defined(SC95F8x2x) && !defined(SC95F7x2x) && !defined(SC95FS52x) && !defined(SC95F8x7x) && !defined(S
             -C95F7x7x) && !defined (SC95R503)
 520   2      #if !defined(SC95F7619B)
 521   2          case GPIO3:
 522   2            if(PortPins == GPIO_PIN_LNIB)
 523   2            {
 524   3              IOHCON1 &= 0xCF;
 525   3              IOHCON1 |= GPIO_IOH_Grade << 4;
 526   3            }
 527   2            break;
 528   2      #endif
 529   2      #else
                  case GPIO5:
                    if(PortPins == GPIO_PIN_LNIB)
                    {
                      IOHCON1 &= 0xCF;
                      IOHCON1 |= GPIO_IOH_Grade << 4;
                    }
                    break;
              #endif
 538   2          default:
C51 COMPILER V9.59.0.0   SC95F_GPIO                                                        03/23/2024 09:11:13 PAGE 10  

 539   2            break;
 540   2        }
 541   1      }
 542          
 543          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    664    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
