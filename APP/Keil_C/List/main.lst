C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2024 20:37:52 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\User\main.c LARGE OMF2 OPTIMIZE(0,SIZE) BROWSE INTVECTOR(0X1000) INCD
                    -IR(..\FWLib\SC95F_Lib\inc;..\User;..\IOT_DRIVER\XIAOMI;..\Drivers;..\Drivers\TKDriver\C;..\List\..\Apps;..\Apps) DEFINE(
                    -SC95F8x1xB) DEBUG PRINT(..\List\main.lst) TABS(2) OBJECT(..\Output\main.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c)  
   3          //  FileName    : main.c
   4          //  Function    : Main Function
   5          //  Instructions  : Contains the MCU initialization function and its H file
   6          //************************************************************
   7          /********************Includes************************************************************************/
   8          #include "SC_Init.h"  // MCU initialization header file, including all firmware library header files
   9          #include "SC_it.h"
  10          #include "..\Drivers\SCDriver_list.h"
  11          #include "HeadFiles\SysFunVarDefine.h"
  12          #include "..\Apps\includeall.h"
  13          
  14          extern void CMP_Init(void);
  15          unsigned long int exKeyValueFlag;
  16          uint16_t gAD_Value1,gAD_Value2,gAD_Value3,gAD_Value4;
  17          uint8_t gPWMOnOff ;
  18          uint8_t KEY_test;
  19          
  20          /**************************************Generated by EasyCodeCube*************************************/
  21          //Forbid editing areas between the labels !!!
  22          
  23          /*************************************.Generated by EasyCodeCube.************************************/
  24          
  25          
  26          /*****************************************************************************************************
  27          * Function Name: main
  28          * Description  : This function implements main function.
  29          * Arguments    : None
  30          * Return Value : None
  31          ******************************************************************************************************/
  32          void main(void)
  33          { 
  34   1          
  35   1      #if(LDROM_MODE==0)
  36   1          SetInterruptAPP();
  37   1      #endif
  38   1          /*<Generated by EasyCodeCube begin>*/
  39   1          /*<UserCodeStart>*//*<SinOne-Tag><36>*/
  40   1          IcResourceInit();
  41   1          /*<UserCodeEnd>*//*<SinOne-Tag><36>*/
  42   1          /*<UserCodeStart>*//*<SinOne-Tag><60>*/
  43   1          DevicePowerOnInit();
*** WARNING C206 IN LINE 43 OF ..\User\main.c: 'DevicePowerOnInit': missing function-prototype
  44   1          OTA_Init(IOT_Uart_Receiver,&IOT_Uart_DataBuf);
  45   1          IOT_Init(0);    
  46   1          sysRest();
*** WARNING C206 IN LINE 46 OF ..\User\main.c: 'sysRest': missing function-prototype
  47   1          
  48   1          EEpromInit();
  49   1          
  50   1          TouchKeyInit();
  51   1          CMP_Init();
C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2024 20:37:52 PAGE 2   

  52   1          /*<UserCodeEnd>*//*<SinOne-Tag><60>*/
  53   1          /*<UserCodeStart>*//*<SinOne-Tag><4>*/
  54   1          /*****MainLoop*****/
  55   1          //WriteTempEeprom();
  56   1          while(1)
  57   1          {
  58   2              /*<UserCodeStart>*//*<SinOne-Tag><14>*/
  59   2              /***User program***/
  60   2              WDTCON |=0x10;
  61   2              
  62   2      //        if(IOT_GET_FW==IOT_Work())                        //IOT平台交互命令处理
  63   2      //        {
  64   2      //#if(FIRMWARE_DOWMLOADER_MODE==0) //在BOOT中下载固件
  65   2      //            OTA_JumpBoot();             //复位到BOOT，在BOOT中下载固件并更新到APP区
  66   2      //#endif
  67   2      //        }
  68   2              
  69   2      //#if(FIRMWARE_DOWMLOADER_MODE==1)
  70   2      //        OTA_FirmwareDownload(&IAP_Pack);   //从IOT平台下载固件
  71   2      //        
  72   2      //        if(IAP_Pack.Size!=0)                       //完成一包数据接收
  73   2      //        {
  74   2      //            unsigned int IapLen;
  75   2      //            BootLoadInit();                         //开放IAP操作区域
  76   2      //            IapLen=SaveOTA_to_BacksArea(&IAP_Pack); //将APP写入备份区
  77   2      //            if(IapLen!=0)                           //写入成功
  78   2      //            {
  79   2      //                IAP_Pack.State=OTA_IAPWRITED;
  80   2      //            }
  81   2      //            else
  82   2      //            {
  83   2      //                IAP_Pack.State=OTA_FAULT;             //下载失败
  84   2      //            }
  85   2      //            IAP_Pack.Size=0;
  86   2      //            BootLoad_DeInit();                        //恢复IAP操作区域
  87   2      //        }     
  88   2      //        if(IAP_Pack.State==OTA_COMPLETE)     //下载完成是，IAP_Pack.State置为OTA_COMPLETE状态
  89   2      //        {
  90   2      //            BootLoadInit();                   //开放IAP操作区域
  91   2      //            if (!IAP_BacksArea_CrcCheck())    //检查下载到备份区代码的Crc       
  92   2      //            {
  93   2      //                BootLoad_DeInit();            //恢复IAP操作区域
  94   2      //                IAP_Pack.State=OTA_FAULT;     //下载失败
  95   2      //            }
  96   2      //            else                              //校验通过
  97   2      //            {
  98   2      //                BootLoad_DeInit();            //恢复IAP操作区域
  99   2      //                OTA_JumpBoot();             //复位到BOOT，将备份区更新到APP区
 100   2      //            }
 101   2      //        } 
 102   2      //        
 103   2      //        if(IAP_Pack.State==OTA_FAULT)  //出错处理
 104   2      //       {
 105   2      //           OTA_Init(IOT_Uart_Receiver,&IOT_Uart_DataBuf);
 106   2      //            IOT_Init(0);
 107   2      //       }    
 108   2      //#endif
 109   2      #if 1         
 110   2              if(SOCAPI_TouchKeyStatus & 0x80)
 111   2              {
 112   3                  SOCAPI_TouchKeyStatus &= 0x7f;
 113   3                  exKeyValueFlag = TouchKeyScan();
C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2024 20:37:52 PAGE 3   

 114   3                  if(exKeyValueFlag >0)
 115   3                  { 
 116   4                      
 117   4                      if(exKeyValueFlag&0x02ul)
 118   4                      {
 119   5                          KeyRestFlag = 1;
 120   5                          NoKeyPressFalg = 0;
 121   5                      }
 122   4                      exKeyValueFlag>>=8;
 123   4                      if(exKeyValueFlag&0x40ul)
 124   4                      {
 125   5                          KeySelecetFlag  = 1;
 126   5                          NoKeyPressFalg = 0;
 127   5                      }
 128   4                      
 129   4                      
 130   4                      
 131   4                  }
 132   3                  else
 133   3                  {
 134   4                      NoKeyPressFalg = 1;
 135   4                  }
 136   3                  
 137   3                  TouchKeyRestart();
 138   3              }
 139   2      #endif
 140   2      #if 0
                      ADC_ChannelConfig(ADC_CHANNEL_1,ENABLE);
                      
                      gAD_Value4 = ADC_GetConversionAverageValue(10);
                      
                      ADC_ChannelConfig(ADC_CHANNEL_3,ENABLE);
                      gAD_Value1 = ADC_GetConversionAverageValue(10);
                      
                      ADC_ChannelConfig(ADC_CHANNEL_5,ENABLE);
                      gAD_Value2 = ADC_GetConversionAverageValue(10);
                      
                      ADC_ChannelConfig(ADC_CHANNEL_7,ENABLE);
                      gAD_Value3 = ADC_GetConversionAverageValue(10);
                      
              #endif
 155   2      #if 0
                      if( KEY_test)//gPWMOnOff
                      {
                          LED1_R = 1;
                          LED2_R = 1;
                          LED3_R = 1;
                          LED4_R = 1;
                          LED1_L = 0;
                          LED2_L = 0;
                          LED3_L = 0;
                          LED4_L = 0;
                          
                      }
                      else
                      {
                          
                          LED1_R = 0;
                          LED2_R = 0;
                          LED3_R = 0;
                          LED4_R = 0;
                          LED1_L = 1;
C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2024 20:37:52 PAGE 4   

                          LED2_L = 1;
                          LED3_L = 1;
                          LED4_L = 1;
                      }
              #endif 
 181   2              
 182   2      #if 0
                      if(P05 == 0)
                      {
                          BuzzerFlag =  1;
                          //PWM_IndependentModeConfig(PWM02,2000);
                      }
                      else
                      {
                          //PWM_IndependentModeConfig(PWM02,0);
                      }
                      
              #endif
 194   2      #if 1
 195   2              sysRuning();
*** WARNING C206 IN LINE 195 OF ..\User\main.c: 'sysRuning': missing function-prototype
 196   2      #endif
 197   2              
 198   2              if((CMPCON&0x20)|| KEY_test==0x5A )    //判断模拟器输出状态
 199   2              {
 200   3                  KEY_test &= ~0X5A;
 201   3                  WriteTempEeprom();
 202   3                  BuzzerFlag =  1;
 203   3              } 
 204   2      #if 0
                      else
                      {
                          if(readEEprom(EEPROM_ADDR) == 0)
                          {
                              LED1_L =1;
                              LED2_L =0;
                              LED3_L =0;
                              LED4_L =0;
                          }
                          else if(readEEprom(EEPROM_ADDR) == 1)
                          {
                              LED1_L =0;
                              LED2_L =1;
                              LED3_L =0;
                              LED4_L =0;
                          }
                          else if(readEEprom(EEPROM_ADDR) == 2)
                          {
                              LED1_L =0;
                              LED2_L =0;
                              LED3_L =1;
                              LED4_L =0;
                          }
                          else
                          {
                              LED1_L =0;
                              LED2_L =0;
                              LED3_L =0;
                              LED4_L =1;
                              
                          }
                          
C51 COMPILER V9.59.0.0   MAIN                                                              04/02/2024 20:37:52 PAGE 5   

                      }
              #endif
 239   2              /*<UserCodeEnd>*//*<SinOne-Tag><14>*/
 240   2              /*<Begin-Inserted by EasyCodeCube for Condition>*/
 241   2          }
 242   1          /*<UserCodeEnd>*//*<SinOne-Tag><4>*/
 243   1          /*<Generated by EasyCodeCube end>*/
 244   1      }
 245          
 246          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
