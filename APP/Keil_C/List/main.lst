C51 COMPILER V9.59.0.0   MAIN                                                              04/08/2024 14:09:40 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\User\main.c LARGE OMF2 OPTIMIZE(0,SIZE) BROWSE INTVECTOR(0X1000) INCD
                    -IR(..\FWLib\SC95F_Lib\inc;..\User;..\IOT_DRIVER\XIAOMI;..\Drivers;..\Drivers\TKDriver\C;..\List\..\Apps;..\Apps) DEFINE(
                    -SC95F8x1xB) DEBUG PRINT(..\List\main.lst) TABS(2) OBJECT(..\Output\main.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c)  
   3          //  FileName    : main.c
   4          //  Function    : Main Function
   5          //  Instructions  : Contains the MCU initialization function and its H file
   6          //************************************************************
   7          /********************Includes************************************************************************/
   8          #include "SC_Init.h"  // MCU initialization header file, including all firmware library header files
   9          #include "SC_it.h"
  10          #include "..\Drivers\SCDriver_list.h"
  11          #include "HeadFiles\SysFunVarDefine.h"
  12          #include "..\Apps\includeall.h"
  13          
  14          extern void sysRest(void);
  15          extern void CMP_Init(void);
  16          extern void DevicePowerOnInit(void);
  17          extern void sysRuning(void);
  18          
  19          unsigned long int exKeyValueFlag =0;
  20          uint16_t gAD_Value1,gAD_Value2,gAD_Value3,gAD_Value4;
  21          uint8_t gPWMOnOff ;
  22          uint8_t KEY_test;
  23          
  24          /**************************************Generated by EasyCodeCube*************************************/
  25          //Forbid editing areas between the labels !!!
  26          
  27          /*************************************.Generated by EasyCodeCube.************************************/
  28          
  29          
  30          /*****************************************************************************************************
  31          * Function Name: main
  32          * Description  : This function implements main function.
  33          * Arguments    : None
  34          * Return Value : None
  35          ******************************************************************************************************/
  36          void main(void)
  37          { 
  38   1          
  39   1      #if(LDROM_MODE==0)
  40   1      
  41   1      
  42   1      
  43   1      
  44   1      
  45   1      
  46   1      
  47   1      
  48   1      
  49   1      
  50   1      
  51   1      
  52   1      
  53   1      
C51 COMPILER V9.59.0.0   MAIN                                                              04/08/2024 14:09:40 PAGE 2   

  54   1      
  55   1      
  56   1      
  57   1      
  58   1      
  59   1      
  60   1      
  61   1      
  62   1       SetInterruptAPP();
  63   1      #endif
  64   1          /*<Generated by EasyCodeCube begin>*/
  65   1          /*<UserCodeStart>*//*<SinOne-Tag><36>*/
  66   1          IcResourceInit();
  67   1          /*<UserCodeEnd>*//*<SinOne-Tag><36>*/
  68   1          /*<UserCodeStart>*//*<SinOne-Tag><60>*/
  69   1          DevicePowerOnInit();
  70   1          OTA_Init(IOT_Uart_Receiver,&IOT_Uart_DataBuf);
  71   1          IOT_Init(0);    
  72   1          
  73   1          
  74   1          EEpromInit();
  75   1          
  76   1          TouchKeyInit();
  77   1          CMP_Init();
  78   1          sysRest();
  79   1          /*<UserCodeEnd>*//*<SinOne-Tag><60>*/
  80   1          /*<UserCodeStart>*//*<SinOne-Tag><4>*/
  81   1          /*****MainLoop*****/
  82   1          //WriteTempEeprom();
  83   1          //    Pump_io =1;
  84   1          //    while(1)
  85   1          //    {
  86   1          //         WDTCON |=0x10;
  87   1          //    }
  88   1          while(1)
  89   1          {
  90   2              /*<UserCodeStart>*//*<SinOne-Tag><14>*/
  91   2              /***User program***/
  92   2              WDTCON |=0x10;
  93   2              
  94   2              //        if(IOT_GET_FW==IOT_Work())                        //IOT平台交互命令处理
  95   2              //        {
  96   2              //#if(FIRMWARE_DOWMLOADER_MODE==0) //在BOOT中下载固件
  97   2              //            OTA_JumpBoot();             //复位到BOOT，在BOOT中下载固件并更新到APP区
  98   2              //#endif
  99   2              //        }
 100   2              
 101   2              //#if(FIRMWARE_DOWMLOADER_MODE==1)
 102   2              //        OTA_FirmwareDownload(&IAP_Pack);   //从IOT平台下载固件
 103   2              //        
 104   2              //        if(IAP_Pack.Size!=0)                       //完成一包数据接收
 105   2              //        {
 106   2              //            unsigned int IapLen;
 107   2              //            BootLoadInit();                         //开放IAP操作区域
 108   2              //            IapLen=SaveOTA_to_BacksArea(&IAP_Pack); //将APP写入备份区
 109   2              //            if(IapLen!=0)                           //写入成功
 110   2              //            {
 111   2              //                IAP_Pack.State=OTA_IAPWRITED;
 112   2              //            }
 113   2              //            else
 114   2              //            {
 115   2              //                IAP_Pack.State=OTA_FAULT;             //下载失败
C51 COMPILER V9.59.0.0   MAIN                                                              04/08/2024 14:09:40 PAGE 3   

 116   2              //            }
 117   2              //            IAP_Pack.Size=0;
 118   2              //            BootLoad_DeInit();                        //恢复IAP操作区域
 119   2              //        }     
 120   2              //        if(IAP_Pack.State==OTA_COMPLETE)     //下载完成是，IAP_Pack.State置为OTA_COMPLETE状态
 121   2              //        {
 122   2              //            BootLoadInit();                   //开放IAP操作区域
 123   2              //            if (!IAP_BacksArea_CrcCheck())    //检查下载到备份区代码的Crc       
 124   2              //            {
 125   2              //                BootLoad_DeInit();            //恢复IAP操作区域
 126   2              //                IAP_Pack.State=OTA_FAULT;     //下载失败
 127   2              //            }
 128   2              //            else                              //校验通过
 129   2              //            {
 130   2              //                BootLoad_DeInit();            //恢复IAP操作区域
 131   2              //                OTA_JumpBoot();             //复位到BOOT，将备份区更新到APP区
 132   2              //            }
 133   2              //        } 
 134   2              //        
 135   2              //        if(IAP_Pack.State==OTA_FAULT)  //出错处理
 136   2              //       {
 137   2              //           OTA_Init(IOT_Uart_Receiver,&IOT_Uart_DataBuf);
 138   2              //            IOT_Init(0);
 139   2              //       }    
 140   2              //#endif
 141   2      #if 1         
 142   2              if(SOCAPI_TouchKeyStatus & 0x80)
 143   2              {
 144   3                  SOCAPI_TouchKeyStatus &= 0x7f;
 145   3                  exKeyValueFlag = TouchKeyScan();
 146   3                  if(exKeyValueFlag >0)
 147   3                  { 
 148   4                    
 149   4                      if(exKeyValueFlag == 0x4002ul)
 150   4                      {
 151   5                          KeyCancelRestFlag =1;
 152   5                          NoKeyPressFalg = 0;
 153   5                      }
 154   4                      
 155   4                      else if(exKeyValueFlag&0x02ul)
 156   4                      {
 157   5                          KeyRestFlag = 1;
 158   5                          NoKeyPressFalg = 0;
 159   5                      }
 160   4                      
 161   4                      else 
 162   4                      {
 163   5                          KeySelecetFlag  = 1;
 164   5                          NoKeyPressFalg = 0;
 165   5                      }
 166   4                      
 167   4                      
 168   4                      
 169   4                  }
 170   3                  else
 171   3                  {
 172   4                      NoKeyPressFalg = 1;
 173   4                  }
 174   3                  
 175   3                  TouchKeyRestart();
 176   3              }
 177   2      #endif
C51 COMPILER V9.59.0.0   MAIN                                                              04/08/2024 14:09:40 PAGE 4   

 178   2      #if 0
                      ADC_ChannelConfig(ADC_CHANNEL_1,ENABLE);
                      
                      gAD_Value4 = ADC_GetConversionAverageValue(10);
                      
                      ADC_ChannelConfig(ADC_CHANNEL_3,ENABLE);
                      gAD_Value1 = ADC_GetConversionAverageValue(10);
                      
                      ADC_ChannelConfig(ADC_CHANNEL_5,ENABLE);
                      gAD_Value2 = ADC_GetConversionAverageValue(10);
                      
                      ADC_ChannelConfig(ADC_CHANNEL_7,ENABLE);
                      gAD_Value3 = ADC_GetConversionAverageValue(10);
                      
              #endif
 193   2      #if 0
                      if( KEY_test)//gPWMOnOff
                      {
                          LED1_R = 1;
                          LED2_R = 1;
                          LED3_R = 1;
                          LED4_R = 1;
                          LED1_L = 0;
                          LED2_L = 0;
                          LED3_L = 0;
                          LED4_L = 0;
                          
                      }
                      else
                      {
                          
                          LED1_R = 0;
                          LED2_R = 0;
                          LED3_R = 0;
                          LED4_R = 0;
                          LED1_L = 1;
                          LED2_L = 1;
                          LED3_L = 1;
                          LED4_L = 1;
                      }
              #endif 
 219   2              
 220   2      #if 0
                      if(P05 == 0)
                      {
                          BuzzerFlag =  1;
                          //PWM_IndependentModeConfig(PWM02,2000);
                      }
                      else
                      {
                          //PWM_IndependentModeConfig(PWM02,0);
                      }
                      
              #endif
 232   2      #if 1
 233   2              sysRuning();
 234   2      #endif
 235   2              
 236   2              if((CMPCON&0x20)|| KEY_test==0x5A )    //判断模拟器输出状态
 237   2              {
 238   3                  KEY_test &= ~0X5A;
 239   3                  WriteTempEeprom(1);
C51 COMPILER V9.59.0.0   MAIN                                                              04/08/2024 14:09:40 PAGE 5   

 240   3                  BuzzerFlag =  1;
 241   3              } 
 242   2      #if 0
                      else
                      {
                          if(readEEprom(EEPROM_ADDR) == 0)
                          {
                              LED1_L =1;
                              LED2_L =0;
                              LED3_L =0;
                              LED4_L =0;
                          }
                          else if(readEEprom(EEPROM_ADDR) == 1)
                          {
                              LED1_L =0;
                              LED2_L =1;
                              LED3_L =0;
                              LED4_L =0;
                          }
                          else if(readEEprom(EEPROM_ADDR) == 2)
                          {
                              LED1_L =0;
                              LED2_L =0;
                              LED3_L =1;
                              LED4_L =0;
                          }
                          else
                          {
                              LED1_L =0;
                              LED2_L =0;
                              LED3_L =0;
                              LED4_L =1;
                              
                          }
                          
                      }
              #endif
 277   2              /*<UserCodeEnd>*//*<SinOne-Tag><14>*/
 278   2              /*<Begin-Inserted by EasyCodeCube for Condition>*/
 279   2          }
 280   1          /*<UserCodeEnd>*//*<SinOne-Tag><4>*/
 281   1          /*<Generated by EasyCodeCube end>*/
 282   1      }
 283          
 284          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    336    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
