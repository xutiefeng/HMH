//************************************************************
//  Copyright (c)  
//	FileName	  : main.c
//	Function	  : Main Function
//  Instructions  : Contains the MCU initialization function and its H file
//************************************************************
/********************Includes************************************************************************/
#include "SC_Init.h"	// MCU initialization header file, including all firmware library header files
#include "SC_it.h"
#include "..\Drivers\SCDriver_list.h"
#include "HeadFiles\SysFunVarDefine.h"


/**************************************Generated by EasyCodeCube*************************************/
//Forbid editing areas between the labels !!!

/*************************************.Generated by EasyCodeCube.************************************/

/*****************************************************************************************************
* Function Name: main
* Description  : This function implements main function.
* Arguments    : None
* Return Value : None
******************************************************************************************************/
void main(void)
{	
#if(LDROM_MODE==0)
    SetInterruptBOOT();
#endif
    /*<Generated by EasyCodeCube begin>*/
/*<UserCodeStart>*//*<SinOne-Tag><36>*/
IcResourceInit();
/*<UserCodeEnd>*//*<SinOne-Tag><36>*/
/*<UserCodeStart>*//*<SinOne-Tag><72>*/
    OTA_Init(IOT_Uart_Receiver,&IOT_Uart_DataBuf);
    IOT_Init(1);	
    
    BootLoadInit();                         //开放IAP操作区域
    BOOT_WaitTime=ISP_TIME_WINDOW*2;
    /*<UserCodeEnd>*//*<SinOne-Tag><72>*/
/*<UserCodeStart>*//*<SinOne-Tag><4>*/
    /*****MainLoop*****/
    while(1)
    {
        /*<UserCodeStart>*//*<SinOne-Tag><14>*/
        /***User program***/
        WDTCON |=0x10;
        if(BOOT_WaitTime!=0)  //延时
        {
#if (FIRMWARE_DOWMLOADER_MODE==1)
            BOOT_WaitTime=0;
#else
            if(BTMCON & 0X40)
            {
                BTMCON &= ~0X40;
                BOOT_WaitTime--;
            }	
            OTA_FirmwareDownload(&IAP_Pack);            //向IOT平台发送升级请求，从IOT平台下载固件
            
            if(IAP_Pack.Size!=0)                        //完成一包数据接收
            {
                unsigned char IapLen;
                BOOT_WaitTime=ISP_TIME_WINDOW*2;        //延时时间复位
                IapLen=SaveOTA_to_BacksArea(&IAP_Pack); //将APP写入备份区
                if(IapLen!=0)                           //写入成功
                {
                    IAP_Pack.State=OTA_IAPWRITED;
                }
                else
                {
                    BOOT_WaitTime=0;
                    IAP_Pack.State=OTA_FAULT;            //下载失败
                }
                IAP_Pack.Size=0;
            }			
            if(IAP_Pack.State==OTA_COMPLETE)     //下载完成，IAP_Pack.State置为OTA_COMPLETE状态
            {
                if (!IAP_BacksArea_CrcCheck())   //检查下载到备份区代码的Crc       
                {
                    IAP_Pack.State=OTA_FAULT;    //下载失败
                }
                BOOT_WaitTime=0;
            }		
#endif			
        }
        else
        {
            #define  POWERON_CHECK_CODE   1    //1：每次上电检查OTA固件，但上电时间会变长，出厂代码不检查；0：不检查固件CRC
            
            AppCompleteCheck();       //检查备份区代码，如果代码完整且是新版本并copy到APP区
            if(IAP_Check_APFLASH(POWERON_CHECK_CODE))   //APP区固件校验
            {
                BootLoad_DeInit();    //恢复IAP操作区域
                OTA_JumpApp();      //到APP区运行
            }
            else
            {
                OTA_JumpBoot();
            }
        }	
        /*<UserCodeEnd>*//*<SinOne-Tag><14>*/
/*<Begin-Inserted by EasyCodeCube for Condition>*/
    }
    /*<UserCodeEnd>*//*<SinOne-Tag><4>*/

/*<Generated by EasyCodeCube end>*/
}
